<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <apiVersion>60.0</apiVersion>
    <assignments>
        <name>Assign_error_message_for_Fetch_Mortgage_Application</name>
        <label>Assign error message for Fetch Mortgage Application</label>
        <locationX>578</locationX>
        <locationY>566</locationY>
        <assignmentItems>
            <assignToReference>ExceptionCustomMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CustomErrorMessageOnRetrievingApplication</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Exception_Logging</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_error_message_for_Fetch_User_NLA_Level</name>
        <label>Assign error message for Fetch User NLA Level</label>
        <locationX>842</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>ExceptionCustomMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CustomErrorMessageOnRetrievingUser</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>Exception_Logging</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_error_message_for_GetDeclineApplicationDecision</name>
        <label>Assign error message for GetDeclineApplicationDecision</label>
        <locationX>1634</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>ExceptionCustomMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CustomErrorMessageOnRetrievingApplicationDecision</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>Exception_Logging</targetReference>
        </connector>
    </assignments>
    <choices>
        <name>Accept</name>
        <choiceText>Accept</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Accept</stringValue>
        </value>
    </choices>
    <choices>
        <name>Decline</name>
        <choiceText>Decline</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Decline</stringValue>
        </value>
    </choices>
    <constants>
        <description>Error on retrieving mortgage application</description>
        <name>CustomErrorMessageOnRetrievingApplication</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Error on retrieving mortgage application</stringValue>
        </value>
    </constants>
    <constants>
        <name>CustomErrorMessageOnRetrievingApplicationDecision</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Error on retrieving Application Decision record in flow</stringValue>
        </value>
    </constants>
    <constants>
        <description>Error on retrieving user record</description>
        <name>CustomErrorMessageOnRetrievingUser</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Error on retrieving user record</stringValue>
        </value>
    </constants>
    <constants>
        <name>DecisionCentre</name>
        <dataType>String</dataType>
        <value>
            <stringValue>decision-centre</stringValue>
        </value>
    </constants>
    <constants>
        <name>Error</name>
        <dataType>String</dataType>
        <value>
            <stringValue>ERROR</stringValue>
        </value>
    </constants>
    <constants>
        <name>FlowApiName</name>
        <dataType>String</dataType>
        <value>
            <stringValue>FL007HomesManualDecisionScreenFlow</stringValue>
        </value>
    </constants>
    <constants>
        <name>OfferCondition1189</name>
        <dataType>String</dataType>
        <value>
            <stringValue>1189</stringValue>
        </value>
    </constants>
    <decisions>
        <name>DecisionOutcomeCondition</name>
        <label>DecisionOutcomeCondition</label>
        <locationX>1040</locationX>
        <locationY>242</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Accept_Outcome</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Decision_Outcome</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Accept</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>FetchUserNLALevel</targetReference>
            </connector>
            <label>Accept Outcome</label>
        </rules>
        <rules>
            <name>Decline_Outcome</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Decision_Outcome</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Decline</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetDeclineApplicationDecision</targetReference>
            </connector>
            <label>Decline Outcome</label>
        </rules>
    </decisions>
    <decisions>
        <name>DeclineRecordsCondition</name>
        <label>DeclineRecordsCondition</label>
        <locationX>1238</locationX>
        <locationY>458</locationY>
        <defaultConnector>
            <targetReference>DeclineRecordNotAvailableErrorScreen</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Decline_Record_Available</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetDeclineApplicationDecision</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>DeclineScreen</targetReference>
            </connector>
            <label>Decline Record Available</label>
        </rules>
    </decisions>
    <decisions>
        <name>MatchUserNLALevelToCaseNLALevel</name>
        <label>Match User NLA Level To Case NLA Level</label>
        <locationX>182</locationX>
        <locationY>566</locationY>
        <defaultConnector>
            <targetReference>FailedScreen</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>NLA Level Verification Failed</defaultConnectorLabel>
        <rules>
            <name>NLALevelVerificationPassed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>UserNLALevel</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>CaseNLALevel</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AcceptScreen</targetReference>
            </connector>
            <label>NLA Level Verification Passed</label>
        </rules>
    </decisions>
    <description>FL007-Homes-Manual Decision Flow : This flow runs when user clicks on the Quick action &apos;Manual Decision&apos; on Residential Loan Application which all the users to run the process related to Manual Decision</description>
    <dynamicChoiceSets>
        <name>OfferConditionValues</name>
        <dataType>Multipicklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>HMOfferCondition__c</picklistField>
        <picklistObject>HMAppDecision__c</picklistObject>
    </dynamicChoiceSets>
    <environments>Default</environments>
    <formulas>
        <name>CaseNLALevel</name>
        <dataType>Number</dataType>
        <expression>VALUE(TEXT({!FetchMortgageApplication.HMNLALevel__c}))</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>DefaultOfferCondition</name>
        <dataType>String</dataType>
        <expression>IF(INCLUDES({!FetchMortgageApplication.HMSourceOfDeposit__c}, &apos;GIFT&apos;),&apos;1420&apos;,&apos;&apos;)</expression>
    </formulas>
    <formulas>
        <name>FifthCategoryAndReasonAllValidation</name>
        <dataType>Boolean</dataType>
        <expression>IF({!FifthCategoryAndReasonPicklist.topValue} != &apos;&apos; &amp;&amp; {!FifthCategoryAndReasonPicklist.middleValue} == &apos;&apos; ,false,{!FifthCategoryAndReasonValidation})</expression>
    </formulas>
    <formulas>
        <name>FifthCategoryAndReasonValidation</name>
        <dataType>Boolean</dataType>
        <expression> NOT( NOT(ISBLANK({!FifthCategoryAndReasonPicklist.topValue})) &amp;&amp; (({!FirstCategoryAndReasonPicklist.topValue} = {!FifthCategoryAndReasonPicklist.topValue} &amp;&amp; {!FirstCategoryAndReasonPicklist.middleValue} = {!FifthCategoryAndReasonPicklist.middleValue} ) || ({!SecondCategoryAndReasonPicklist.topValue} = {!FifthCategoryAndReasonPicklist.topValue} &amp;&amp; {!SecondCategoryAndReasonPicklist.middleValue} = {!FifthCategoryAndReasonPicklist.middleValue}) || ( {!FourthCategoryAndReasonPicklist.topValue} = {!FifthCategoryAndReasonPicklist.topValue} &amp;&amp; {!FourthCategoryAndReasonPicklist.middleValue} = {!FifthCategoryAndReasonPicklist.middleValue}) || ( {!ThirdCategoryAndReasonPicklist.topValue} = {!FifthCategoryAndReasonPicklist.topValue} &amp;&amp; {!ThirdCategoryAndReasonPicklist.middleValue} = {!FifthCategoryAndReasonPicklist.middleValue})))</expression>
    </formulas>
    <formulas>
        <name>FifthCategoryAndReasonValidationMessage</name>
        <dataType>String</dataType>
        <expression>IF({!FifthCategoryAndReasonPicklist.topValue} != &apos;&apos; &amp;&amp; {!FifthCategoryAndReasonPicklist.middleValue} == &apos;&apos; ,&apos;Please select a corresponding reason&apos;,IF({!FifthCategoryAndReasonValidation},&apos;&apos;,&apos;This decline category &amp; reason has already been selected, please choose another&apos;))</expression>
    </formulas>
    <formulas>
        <name>FifthNotesValidation</name>
        <dataType>Boolean</dataType>
        <expression>LEN({!FifthRequiredNotes}) &gt;=  20 &amp;&amp; LEN({!FifthRequiredNotes}) &lt;= 255</expression>
    </formulas>
    <formulas>
        <name>FifthNotesValidationMessage</name>
        <dataType>String</dataType>
        <expression>IF(
    LEN({!FifthRequiredNotes}) &lt; 20   ,
    &apos;The minimum number of characters allowed in the note is 20&apos;,
    IF(  
        LEN({!FifthRequiredNotes}) &gt; 255  ,
       &apos;The maximum number of characters allowed in the note is 255&apos;, 
        &apos;&apos;
    )
)</expression>
    </formulas>
    <formulas>
        <name>FirstCategoryAndReasonAllValidation</name>
        <dataType>Boolean</dataType>
        <expression>IF({!FirstCategoryAndReasonPicklist.topValue} != &apos;&apos; &amp;&amp; {!FirstCategoryAndReasonPicklist.middleValue} == &apos;&apos; ,false,{!FirstCategoryAndReasonValidation})</expression>
    </formulas>
    <formulas>
        <name>FirstCategoryAndReasonValidation</name>
        <dataType>Boolean</dataType>
        <expression>  NOT( NOT(ISBLANK({!FirstCategoryAndReasonPicklist.topValue})) &amp;&amp; (({!FirstCategoryAndReasonPicklist.topValue} = {!SecondCategoryAndReasonPicklist.topValue} &amp;&amp; {!FirstCategoryAndReasonPicklist.middleValue} = {!SecondCategoryAndReasonPicklist.middleValue} ) || ({!FirstCategoryAndReasonPicklist.topValue} = {!ThirdCategoryAndReasonPicklist.topValue} &amp;&amp; {!FirstCategoryAndReasonPicklist.middleValue} = {!ThirdCategoryAndReasonPicklist.middleValue}) || ({!FirstCategoryAndReasonPicklist.topValue} = {!FourthCategoryAndReasonPicklist.topValue} &amp;&amp; {!FirstCategoryAndReasonPicklist.middleValue} = {!FourthCategoryAndReasonPicklist.middleValue}) || ({!FirstCategoryAndReasonPicklist.topValue} = {!FifthCategoryAndReasonPicklist.topValue} &amp;&amp; {!FirstCategoryAndReasonPicklist.middleValue} = {!FifthCategoryAndReasonPicklist.middleValue})))</expression>
    </formulas>
    <formulas>
        <name>FirstCategoryAndReasonValidationMessage</name>
        <dataType>String</dataType>
        <expression>IF({!FirstCategoryAndReasonPicklist.topValue} != &apos;&apos; &amp;&amp; {!FirstCategoryAndReasonPicklist.middleValue} == &apos;&apos; ,&apos;Please select a corresponding reason&apos;,IF({!FirstCategoryAndReasonValidation},&apos;&apos;,&apos;This decline category &amp; reason has already been selected, please choose another&apos;))</expression>
    </formulas>
    <formulas>
        <name>FirstNotesValidation</name>
        <dataType>Boolean</dataType>
        <expression>LEN({!FirstRequiredNotes}) &gt;= 20 &amp;&amp; LEN({!FirstRequiredNotes}) &lt;= 255</expression>
    </formulas>
    <formulas>
        <name>FirstNotesValidationMessage</name>
        <dataType>String</dataType>
        <expression>IF(
    LEN({!FirstRequiredNotes}) &lt; 20   ,
    &apos;The minimum number of characters allowed in the note is 20&apos;,
    IF(  
        LEN({!FirstRequiredNotes}) &gt; 255  ,
       &apos;The maximum number of characters allowed in the note is 255&apos;, 
        &apos;&apos;
    )
)</expression>
    </formulas>
    <formulas>
        <name>FourthCategoryAndReasonAllValidation</name>
        <dataType>Boolean</dataType>
        <expression>IF({!FourthCategoryAndReasonPicklist.topValue} != &apos;&apos; &amp;&amp; {!FourthCategoryAndReasonPicklist.middleValue} == &apos;&apos; ,false,{!FourthCategoryAndReasonValidation})</expression>
    </formulas>
    <formulas>
        <name>FourthCategoryAndReasonValidation</name>
        <dataType>Boolean</dataType>
        <expression> NOT( NOT(ISBLANK({!FourthCategoryAndReasonPicklist.topValue})) &amp;&amp; (({!FirstCategoryAndReasonPicklist.topValue} = {!FourthCategoryAndReasonPicklist.topValue} &amp;&amp; {!FirstCategoryAndReasonPicklist.middleValue} = {!FourthCategoryAndReasonPicklist.middleValue} ) || ({!SecondCategoryAndReasonPicklist.topValue} = {!FourthCategoryAndReasonPicklist.topValue} &amp;&amp; {!SecondCategoryAndReasonPicklist.middleValue} = {!FourthCategoryAndReasonPicklist.middleValue}) || ( {!FourthCategoryAndReasonPicklist.topValue} = {!ThirdCategoryAndReasonPicklist.topValue} &amp;&amp; {!FourthCategoryAndReasonPicklist.middleValue} = {!ThirdCategoryAndReasonPicklist.middleValue}) || ( {!FourthCategoryAndReasonPicklist.topValue} = {!FifthCategoryAndReasonPicklist.topValue} &amp;&amp; {!FourthCategoryAndReasonPicklist.middleValue} = {!FifthCategoryAndReasonPicklist.middleValue})))</expression>
    </formulas>
    <formulas>
        <name>FourthCategoryAndReasonValidationMessage</name>
        <dataType>String</dataType>
        <expression>IF({!FourthCategoryAndReasonPicklist.topValue} != &apos;&apos; &amp;&amp; {!FourthCategoryAndReasonPicklist.middleValue} == &apos;&apos; ,&apos;Please select a corresponding reason&apos;,IF({!FourthCategoryAndReasonValidation},&apos;&apos;,&apos;This decline category &amp; reason has already been selected, please choose another&apos;))</expression>
    </formulas>
    <formulas>
        <name>FourthNotesValidation</name>
        <dataType>Boolean</dataType>
        <expression>LEN({!FourthRequiredNotes}) &gt;= 20 &amp;&amp; LEN({!FourthRequiredNotes}) &lt;= 255</expression>
    </formulas>
    <formulas>
        <name>FourthNotesValidationMessage</name>
        <dataType>String</dataType>
        <expression>IF(
    LEN({!FourthRequiredNotes}) &lt; 20   ,
    &apos;The minimum number of characters allowed in the note is 20&apos;,
    IF(  
        LEN({!FourthRequiredNotes}) &gt; 255  ,
       &apos;The maximum number of characters allowed in the note is 255&apos;, 
        &apos;&apos;
    )
)</expression>
    </formulas>
    <formulas>
        <name>OtherCommentsValidationFormula</name>
        <dataType>Boolean</dataType>
        <expression>(LEN({!OtherComments}) &gt;0  &amp;&amp; 
LEN({!OtherComments}) &gt;=4 &amp;&amp; 
LEN({!OtherComments}) &lt;=700)</expression>
    </formulas>
    <formulas>
        <name>OtherCommentsValidationMessage</name>
        <dataType>String</dataType>
        <expression>IF(
    LEN({!OtherComments}) &gt;0 &amp;&amp; LEN({!OtherComments}) &lt;4,
    &apos;Please expand your comment. This must at least 4 characters&apos;,
    IF(  
        LEN({!OtherComments}) &gt; 700,
       &apos;You have reached the 700 maximum character count - please reduce your comment&apos;, 
        &apos;&apos;
    )
)</expression>
    </formulas>
    <formulas>
        <name>OverallRationaleAcceptScreenFormula</name>
        <dataType>Boolean</dataType>
        <expression>LEN({!OverallRationaleAcceptScreen}) &gt;= 20 &amp;&amp; LEN({!OverallRationaleAcceptScreen}) &lt;= 32000</expression>
    </formulas>
    <formulas>
        <description>Error message for Overall Rationale Accept Screen field</description>
        <name>OverallRationaleAcceptScreenValidationMessage</name>
        <dataType>String</dataType>
        <expression>IF(
    LEN({!OverallRationaleAcceptScreen}) &lt; 20,
    &apos;The minimum number of characters allowed is 20&apos;,
    IF(  
        LEN({!OverallRationaleAcceptScreen}) &gt; 32000,
       &apos;The maximum number of characters allowed is 32,000&apos;, 
        &apos;&apos;
    )
)</expression>
    </formulas>
    <formulas>
        <description>Error message for Overall Rationale field</description>
        <name>OverallRationaleValidationMessage</name>
        <dataType>String</dataType>
        <expression>IF(
    LEN({!OverallRationale}) &lt; 20,
    &apos;The minimum number of characters allowed is 20&apos;,
    IF(  
        LEN({!OverallRationale}) &gt; 32000,
       &apos;The maximum number of characters allowed is 32,000&apos;, 
        &apos;&apos;
    )
)</expression>
    </formulas>
    <formulas>
        <name>SecondCategoryAndReasonAllValidation</name>
        <dataType>Boolean</dataType>
        <expression>IF({!SecondCategoryAndReasonPicklist.topValue} != &apos;&apos; &amp;&amp; {!SecondCategoryAndReasonPicklist.middleValue} == &apos;&apos; ,false,{!SecondCategoryAndReasonValidation})</expression>
    </formulas>
    <formulas>
        <name>SecondCategoryAndReasonValidation</name>
        <dataType>Boolean</dataType>
        <expression> NOT( NOT(ISBLANK({!SecondCategoryAndReasonPicklist.topValue})) &amp;&amp; (({!FirstCategoryAndReasonPicklist.topValue} = {!SecondCategoryAndReasonPicklist.topValue} &amp;&amp; {!FirstCategoryAndReasonPicklist.middleValue} = {!SecondCategoryAndReasonPicklist.middleValue} ) || ({!SecondCategoryAndReasonPicklist.topValue} = {!ThirdCategoryAndReasonPicklist.topValue} &amp;&amp; {!SecondCategoryAndReasonPicklist.middleValue} = {!ThirdCategoryAndReasonPicklist.middleValue}) || ({!SecondCategoryAndReasonPicklist.topValue} =  {!FourthCategoryAndReasonPicklist.topValue} &amp;&amp; {!SecondCategoryAndReasonPicklist.middleValue} = {!FourthCategoryAndReasonPicklist.middleValue}) || ({!SecondCategoryAndReasonPicklist.topValue} =  {!FifthCategoryAndReasonPicklist.topValue} &amp;&amp; {!SecondCategoryAndReasonPicklist.middleValue} = {!FifthCategoryAndReasonPicklist.middleValue})))</expression>
    </formulas>
    <formulas>
        <name>SecondCategoryAndReasonValidationMessage</name>
        <dataType>String</dataType>
        <expression>IF({!SecondCategoryAndReasonPicklist.topValue} != &apos;&apos; &amp;&amp; {!SecondCategoryAndReasonPicklist.middleValue} == &apos;&apos; ,&apos;Please select a corresponding reason&apos;,IF({!SecondCategoryAndReasonValidation},&apos;&apos;,&apos;This decline category &amp; reason has already been selected, please choose another&apos;))</expression>
    </formulas>
    <formulas>
        <name>SecondNotesValidation</name>
        <dataType>Boolean</dataType>
        <expression>LEN({!SecondRequiredNotes}) &gt;= 20 &amp;&amp; LEN({!SecondRequiredNotes}) &lt;= 255</expression>
    </formulas>
    <formulas>
        <name>SecondNotesValidationMessage</name>
        <dataType>String</dataType>
        <expression>IF(
    LEN({!SecondRequiredNotes}) &lt; 20   ,
    &apos;The minimum number of characters allowed in the note is 20&apos;,
    IF(  
        LEN({!SecondRequiredNotes}) &gt; 255  ,
       &apos;The maximum number of characters allowed in the note is 255&apos;, 
        &apos;&apos;
    )
)</expression>
    </formulas>
    <formulas>
        <name>ThirdCategoryAndReasonAllValidation</name>
        <dataType>Boolean</dataType>
        <expression>IF({!ThirdCategoryAndReasonPicklist.topValue} != &apos;&apos; &amp;&amp; {!ThirdCategoryAndReasonPicklist.middleValue} == &apos;&apos; ,false,{!ThirdCategoryAndReasonValidation})</expression>
    </formulas>
    <formulas>
        <name>ThirdCategoryAndReasonValidation</name>
        <dataType>Boolean</dataType>
        <expression> NOT( NOT(ISBLANK({!ThirdCategoryAndReasonPicklist.topValue})) &amp;&amp; (({!FirstCategoryAndReasonPicklist.topValue} = {!ThirdCategoryAndReasonPicklist.topValue} &amp;&amp; {!FirstCategoryAndReasonPicklist.middleValue} = {!ThirdCategoryAndReasonPicklist.middleValue} ) || ({!SecondCategoryAndReasonPicklist.topValue} = {!ThirdCategoryAndReasonPicklist.topValue} &amp;&amp; {!SecondCategoryAndReasonPicklist.middleValue} = {!ThirdCategoryAndReasonPicklist.middleValue}) || ( {!FourthCategoryAndReasonPicklist.topValue} = {!ThirdCategoryAndReasonPicklist.topValue} &amp;&amp; {!FourthCategoryAndReasonPicklist.middleValue} = {!ThirdCategoryAndReasonPicklist.middleValue}) || ( {!FifthCategoryAndReasonPicklist.topValue} = {!ThirdCategoryAndReasonPicklist.topValue} &amp;&amp; {!FifthCategoryAndReasonPicklist.middleValue} = {!ThirdCategoryAndReasonPicklist.middleValue})))</expression>
    </formulas>
    <formulas>
        <name>ThirdCategoryAndReasonValidationMessage</name>
        <dataType>String</dataType>
        <expression>IF({!ThirdCategoryAndReasonPicklist.topValue} != &apos;&apos; &amp;&amp; {!ThirdCategoryAndReasonPicklist.middleValue} == &apos;&apos; ,&apos;Please select a corresponding reason&apos;,IF({!ThirdCategoryAndReasonValidation},&apos;&apos;,&apos;This decline category &amp; reason has already been selected, please choose another&apos;))</expression>
    </formulas>
    <formulas>
        <name>ThirdNotesValidation</name>
        <dataType>Boolean</dataType>
        <expression>LEN({!ThirdRequiredNotes}) &gt;= 20 &amp;&amp; LEN({!ThirdRequiredNotes}) &lt;= 255</expression>
    </formulas>
    <formulas>
        <name>ThirdNotesValidationMessage</name>
        <dataType>String</dataType>
        <expression>IF(
    LEN({!ThirdRequiredNotes}) &lt; 20   ,
    &apos;The minimum number of characters allowed in the note is 20&apos;,
    IF(  
        LEN({!ThirdRequiredNotes}) &gt; 255  ,
       &apos;The maximum number of characters allowed in the note is 255&apos;, 
        &apos;&apos;
    )
)</expression>
    </formulas>
    <formulas>
        <name>UserNLALevel</name>
        <dataType>Number</dataType>
        <expression>VALUE(TEXT({!FetchUserNLALevel.HMNLALevel__c}))</expression>
        <scale>0</scale>
    </formulas>
    <interviewLabel>FL007-Homes-Manual Decision Screen Flow {!$Flow.CurrentDateTime}</interviewLabel>
    <label>FL007-Homes-Manual Decision Screen Flow</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>FetchMortgageApplication</name>
        <label>Fetch Mortgage Application</label>
        <locationX>182</locationX>
        <locationY>458</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>MatchUserNLALevelToCaseNLALevel</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Assign_error_message_for_Fetch_Mortgage_Application</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ResidentialLoanApplication</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>FetchUserNLALevel</name>
        <label>Fetch User NLA Level</label>
        <locationX>182</locationX>
        <locationY>350</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>FetchMortgageApplication</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Assign_error_message_for_Fetch_User_NLA_Level</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetDeclineApplicationDecision</name>
        <label>GetDeclineApplicationDecision</label>
        <locationX>1238</locationX>
        <locationY>350</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>DeclineRecordsCondition</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Assign_error_message_for_GetDeclineApplicationDecision</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>HMUserDecision__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Decline</stringValue>
            </value>
        </filters>
        <filters>
            <field>HMResidentialLoanApplication__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>HMAppDecision__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <runInMode>SystemModeWithoutSharing</runInMode>
    <screens>
        <name>AcceptScreen</name>
        <label>Accept Screen</label>
        <locationX>50</locationX>
        <locationY>674</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>OfferConditions</name>
            <choiceReferences>OfferConditionValues</choiceReferences>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>DefaultOfferCondition</elementReference>
            </defaultValue>
            <fieldText>Offer Conditions</fieldText>
            <fieldType>MultiSelectCheckboxes</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>false</isRequired>
        </fields>
        <fields>
            <name>VariableText</name>
            <defaultValue>
                <stringValue>{!DefaultVariableText}</stringValue>
            </defaultValue>
            <fieldText>Variable Text</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>false</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>OfferConditions</leftValueReference>
                    <operator>Contains</operator>
                    <rightValue>
                        <elementReference>OfferCondition1189</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>OtherComments</name>
            <fieldText>Other Comments</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>false</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;{!OtherCommentsValidationMessage}&lt;/p&gt;</errorMessage>
                <formulaExpression>{!OtherCommentsValidationFormula}</formulaExpression>
            </validationRule>
        </fields>
        <fields>
            <name>OverallRationaleAcceptScreen</name>
            <fieldText>Overall Rationale</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;{!OverallRationaleAcceptScreenValidationMessage}&lt;/p&gt;</errorMessage>
                <formulaExpression>{!OverallRationaleAcceptScreenFormula}</formulaExpression>
            </validationRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Decision_Outcome_Screen</name>
        <label>Decision Outcome Screen</label>
        <locationX>1040</locationX>
        <locationY>134</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>DecisionOutcomeCondition</targetReference>
        </connector>
        <fields>
            <name>MessageTest</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;You are making a manual decision&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>Decision_Outcome_Screen_Section1</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>Decision_Outcome_Screen_Section1_Column1</name>
                <fieldType>Region</fieldType>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>3</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>Decision_Outcome_Screen_Section1_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>Decision_Outcome</name>
                    <choiceReferences>Accept</choiceReferences>
                    <choiceReferences>Decline</choiceReferences>
                    <dataType>String</dataType>
                    <fieldText>Decision Outcome</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>false</isRequired>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>Decision_Outcome_Screen_Section1_Column3</name>
                <fieldType>Region</fieldType>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>3</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>DeclineRecordNotAvailableErrorScreen</name>
        <label>DeclineRecordNotAvailableErrorScreen</label>
        <locationX>1370</locationX>
        <locationY>566</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>DeclineRecordNotAvailableErrorMessage</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;em style=&quot;background-color: var(--slds-g-color-neutral-base-100, var(--lwc-colorBackgroundInput,rgb(255, 255, 255))); font-size: var(--lwc-fontSize3,0.8125rem); font-family: sans-serif; color: rgb(254, 5, 5);&quot;&gt;There must be at least one decision type with a user decision outcome of decline&lt;/em&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>DeclineScreen</name>
        <label>DeclineScreen</label>
        <locationX>1106</locationX>
        <locationY>566</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>DeclineScreen_Section1</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>DeclineScreen_Section1_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>FirstCategoryAndReasonPicklist</name>
                    <extensionName>flowruntime:dependentPicklists</extensionName>
                    <fieldType>ComponentInstance</fieldType>
                    <inputParameters>
                        <name>dependencyWrapperApiName</name>
                        <value>
                            <stringValue>HMAppDecision__c</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>topPicklistApiName</name>
                        <value>
                            <stringValue>HMCategory__c</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>middlePicklistApiName</name>
                        <value>
                            <stringValue>HMReason__c</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>topLabel</name>
                        <value>
                            <stringValue>Category</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>topValue</name>
                        <value>
                            <stringValue>FirstCategory</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>middleLabel</name>
                        <value>
                            <stringValue>Reason</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>middleValue</name>
                        <value>
                            <stringValue>FirstReason</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>topRequired</name>
                        <value>
                            <booleanValue>true</booleanValue>
                        </value>
                    </inputParameters>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                    <storeOutputAutomatically>true</storeOutputAutomatically>
                    <validationRule>
                        <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(234, 0, 30);&quot;&gt;{!FirstCategoryAndReasonValidationMessage}&lt;/span&gt;&lt;/p&gt;</errorMessage>
                        <formulaExpression>{!FirstCategoryAndReasonAllValidation}</formulaExpression>
                    </validationRule>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>DeclineScreen_Section1_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>FirstOptionalNotes</name>
                    <fieldText>Notes</fieldText>
                    <fieldType>LargeTextArea</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>false</isRequired>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>FirstCategoryAndReasonPicklist.middleValue</leftValueReference>
                            <operator>NotEqualTo</operator>
                            <rightValue>
                                <stringValue>OTHER</stringValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>FirstRequiredNotes</name>
                    <fieldText>Notes</fieldText>
                    <fieldType>LargeTextArea</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                    <validationRule>
                        <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(234, 0, 30);&quot;&gt;{!FirstNotesValidationMessage}&lt;/span&gt;&lt;/p&gt;</errorMessage>
                        <formulaExpression>{!FirstNotesValidation}</formulaExpression>
                    </validationRule>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>FirstCategoryAndReasonPicklist.middleValue</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>OTHER</stringValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
        </fields>
        <fields>
            <name>DeclineScreen_Section2</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>DeclineScreen_Section2_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>SecondCategoryAndReasonPicklist</name>
                    <extensionName>flowruntime:dependentPicklists</extensionName>
                    <fieldType>ComponentInstance</fieldType>
                    <inputParameters>
                        <name>dependencyWrapperApiName</name>
                        <value>
                            <stringValue>HMAppDecision__c</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>topPicklistApiName</name>
                        <value>
                            <stringValue>HMCategory__c</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>middlePicklistApiName</name>
                        <value>
                            <stringValue>HMReason__c</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>topLabel</name>
                        <value>
                            <stringValue>Category</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>topValue</name>
                        <value>
                            <stringValue>SecondCategory</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>middleLabel</name>
                        <value>
                            <stringValue>Reason</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>middleValue</name>
                        <value>
                            <stringValue>SecondReason</stringValue>
                        </value>
                    </inputParameters>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                    <storeOutputAutomatically>true</storeOutputAutomatically>
                    <validationRule>
                        <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(234, 0, 30);&quot;&gt;{!SecondCategoryAndReasonValidationMessage}&lt;/span&gt;&lt;/p&gt;</errorMessage>
                        <formulaExpression>{!SecondCategoryAndReasonAllValidation}</formulaExpression>
                    </validationRule>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>DeclineScreen_Section2_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>SecondOptionalNotes</name>
                    <fieldText>Notes</fieldText>
                    <fieldType>LargeTextArea</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>false</isRequired>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>SecondCategoryAndReasonPicklist.middleValue</leftValueReference>
                            <operator>NotEqualTo</operator>
                            <rightValue>
                                <stringValue>OTHER</stringValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>SecondRequiredNotes</name>
                    <fieldText>Notes</fieldText>
                    <fieldType>LargeTextArea</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                    <validationRule>
                        <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(234, 0, 30);&quot;&gt;{!SecondNotesValidationMessage}&lt;/span&gt;&lt;/p&gt;</errorMessage>
                        <formulaExpression>{!SecondNotesValidation}</formulaExpression>
                    </validationRule>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>SecondCategoryAndReasonPicklist.middleValue</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>OTHER</stringValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
        </fields>
        <fields>
            <name>DeclineScreen_Section3</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>DeclineScreen_Section3_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>ThirdCategoryAndReasonPicklist</name>
                    <extensionName>flowruntime:dependentPicklists</extensionName>
                    <fieldType>ComponentInstance</fieldType>
                    <inputParameters>
                        <name>dependencyWrapperApiName</name>
                        <value>
                            <stringValue>HMAppDecision__c</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>topPicklistApiName</name>
                        <value>
                            <stringValue>HMCategory__c</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>middlePicklistApiName</name>
                        <value>
                            <stringValue>HMReason__c</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>topLabel</name>
                        <value>
                            <stringValue>Category</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>topValue</name>
                        <value>
                            <stringValue>ThirdCategory</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>middleLabel</name>
                        <value>
                            <stringValue>Reason</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>middleValue</name>
                        <value>
                            <stringValue>ThirdReason</stringValue>
                        </value>
                    </inputParameters>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                    <storeOutputAutomatically>true</storeOutputAutomatically>
                    <validationRule>
                        <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(234, 0, 30);&quot;&gt;{!ThirdCategoryAndReasonValidationMessage}&lt;/span&gt;&lt;/p&gt;</errorMessage>
                        <formulaExpression>{!ThirdCategoryAndReasonAllValidation}</formulaExpression>
                    </validationRule>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>DeclineScreen_Section3_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>ThirdOptionalNotes</name>
                    <fieldText>Notes</fieldText>
                    <fieldType>LargeTextArea</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>false</isRequired>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>ThirdCategoryAndReasonPicklist.middleValue</leftValueReference>
                            <operator>NotEqualTo</operator>
                            <rightValue>
                                <stringValue>OTHER</stringValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>ThirdRequiredNotes</name>
                    <fieldText>Notes</fieldText>
                    <fieldType>LargeTextArea</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                    <validationRule>
                        <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(234, 0, 30);&quot;&gt;{!ThirdNotesValidationMessage}&lt;/span&gt;&lt;/p&gt;</errorMessage>
                        <formulaExpression>{!ThirdNotesValidation}</formulaExpression>
                    </validationRule>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>ThirdCategoryAndReasonPicklist.middleValue</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>OTHER</stringValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
        </fields>
        <fields>
            <name>DeclineScreen_Section4</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>DeclineScreen_Section4_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>FourthCategoryAndReasonPicklist</name>
                    <extensionName>flowruntime:dependentPicklists</extensionName>
                    <fieldType>ComponentInstance</fieldType>
                    <inputParameters>
                        <name>dependencyWrapperApiName</name>
                        <value>
                            <stringValue>HMAppDecision__c</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>topPicklistApiName</name>
                        <value>
                            <stringValue>HMCategory__c</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>middlePicklistApiName</name>
                        <value>
                            <stringValue>HMReason__c</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>topLabel</name>
                        <value>
                            <stringValue>Category</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>topValue</name>
                        <value>
                            <stringValue>FourthCategory</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>middleLabel</name>
                        <value>
                            <stringValue>Reason</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>middleValue</name>
                        <value>
                            <stringValue>FourthReason</stringValue>
                        </value>
                    </inputParameters>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                    <storeOutputAutomatically>true</storeOutputAutomatically>
                    <validationRule>
                        <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(234, 0, 30);&quot;&gt;{!FourthCategoryAndReasonValidationMessage}&lt;/span&gt;&lt;/p&gt;</errorMessage>
                        <formulaExpression>{!FourthCategoryAndReasonAllValidation}</formulaExpression>
                    </validationRule>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>DeclineScreen_Section4_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>FourthOptionalNotes</name>
                    <fieldText>Notes</fieldText>
                    <fieldType>LargeTextArea</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>false</isRequired>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>FourthCategoryAndReasonPicklist.middleValue</leftValueReference>
                            <operator>NotEqualTo</operator>
                            <rightValue>
                                <stringValue>OTHER</stringValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>FourthRequiredNotes</name>
                    <fieldText>Notes</fieldText>
                    <fieldType>LargeTextArea</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                    <validationRule>
                        <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(234, 0, 30);&quot;&gt;{!FourthNotesValidationMessage}&lt;/span&gt;&lt;/p&gt;</errorMessage>
                        <formulaExpression>{!FourthNotesValidation}</formulaExpression>
                    </validationRule>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>FourthCategoryAndReasonPicklist.middleValue</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>OTHER</stringValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
        </fields>
        <fields>
            <name>DeclineScreen_Section5</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>DeclineScreen_Section5_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>FifthCategoryAndReasonPicklist</name>
                    <extensionName>flowruntime:dependentPicklists</extensionName>
                    <fieldType>ComponentInstance</fieldType>
                    <inputParameters>
                        <name>dependencyWrapperApiName</name>
                        <value>
                            <stringValue>HMAppDecision__c</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>topPicklistApiName</name>
                        <value>
                            <stringValue>HMCategory__c</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>middlePicklistApiName</name>
                        <value>
                            <stringValue>HMReason__c</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>topLabel</name>
                        <value>
                            <stringValue>Catgeory</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>topValue</name>
                        <value>
                            <stringValue>FifthCategory</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>middleValue</name>
                        <value>
                            <stringValue>FifthReason</stringValue>
                        </value>
                    </inputParameters>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                    <storeOutputAutomatically>true</storeOutputAutomatically>
                    <validationRule>
                        <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(234, 0, 30);&quot;&gt;{!FifthCategoryAndReasonValidationMessage}&lt;/span&gt;&lt;/p&gt;</errorMessage>
                        <formulaExpression>{!FifthCategoryAndReasonAllValidation}</formulaExpression>
                    </validationRule>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>DeclineScreen_Section5_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>FifthOptionalNotes</name>
                    <fieldText>Notes</fieldText>
                    <fieldType>LargeTextArea</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>false</isRequired>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>FifthCategoryAndReasonPicklist.middleValue</leftValueReference>
                            <operator>NotEqualTo</operator>
                            <rightValue>
                                <stringValue>OTHER</stringValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>FifthRequiredNotes</name>
                    <fieldText>Notes</fieldText>
                    <fieldType>LargeTextArea</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                    <validationRule>
                        <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(234, 0, 30);&quot;&gt;{!FifthNotesValidationMessage}&lt;/span&gt;&lt;/p&gt;</errorMessage>
                        <formulaExpression>{!FifthNotesValidation}</formulaExpression>
                    </validationRule>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>FifthCategoryAndReasonPicklist.middleValue</leftValueReference>
                            <operator>EqualTo</operator>
                            <rightValue>
                                <stringValue>OTHER</stringValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
        </fields>
        <fields>
            <name>OverallRationale</name>
            <fieldText>Overall Rationale</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;{!OverallRationaleValidationMessage}&lt;/p&gt;</errorMessage>
                <formulaExpression> LEN({!OverallRationale}) &gt;= 20 &amp;&amp; LEN({!OverallRationale}) &lt;= 32000</formulaExpression>
            </validationRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>FailedScreen</name>
        <label>Failed Screen</label>
        <locationX>314</locationX>
        <locationY>674</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>NLALevelFailedErrorMessage</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;color: rgb(208, 19, 19);&quot;&gt;You do not have the required mandate level to agree the case&lt;/span&gt;&lt;span style=&quot;color: rgb(211, 15, 15);&quot;&gt;﻿&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>914</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Decision_Outcome_Screen</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <subflows>
        <name>Exception_Logging</name>
        <label>Exception Logging</label>
        <locationX>578</locationX>
        <locationY>674</locationY>
        <flowName>FL010HomesExceptionLoggingScreenFlow</flowName>
        <inputAssignments>
            <name>ExceptionTags</name>
            <value>
                <elementReference>DecisionCentre</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>FlowAPIName</name>
            <value>
                <elementReference>FlowApiName</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>FlowFaultErrorMessage</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>LogEntryCustomMessage</name>
            <value>
                <elementReference>ExceptionCustomMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>LoggingLevel</name>
            <value>
                <elementReference>Error</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <textTemplates>
        <name>DefaultVariableText</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>(user to enter details of applicant with existing mortgage) currently has another mortgage with (user to enter details of existing mortgage company) on (user to enter details of existing property). The Conveyancer must make sure that (user to enter details of applicant with existing mortgage) is/are released from all legal liability under the other mortgage on or before completion/settlement of this mortgage.</text>
    </textTemplates>
    <variables>
        <name>ExceptionCustomMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
