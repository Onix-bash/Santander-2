name: CI Reporting Artifact

on:
  push:
    branches: 'main'

jobs:
  scan_main:
    runs-on: ubuntu-latest
    name: Run Scanner and Store Artifacts
    container:
      image: salesforce/cli:latest-full
    steps:
      - uses: actions/checkout@v4

      - name: Install Scanner
        run: sf plugins install @salesforce/sfdx-scanner@latest-beta

      - name: Run Scanner
        id: scanner
        run: |
          chmod +x ./bash.sh
          ./bash.sh

      - name: Store Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: All Scan Results
          path: output/*/*.xml

  scan_broker:
    runs-on: ubuntu-latest
    name: Broker Portal - Run Scanner
    needs: scan_main
    steps:
      - uses: actions/checkout@v4

      - name: Download Scan Results
        uses: actions/download-artifact@v4
        with:
          name: All Scan Results

      - name: Store Artifacts for Broker Portal
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Scan Results for Broker Portal
          path: broker-portal/*

      - name: Show Scan results for Broker Portal
        id: show_broker_results
        uses: dorny/test-reporter@f7638778046c83f8feeca64ef3d1ec19d1bbccf0
        if: always()
        with:
          artifact: Scan Results for Broker Portal
          name: Broker Portal - Show Results
          path: '*.xml'
          reporter: java-junit
          fail-on-empty: 'false'
          fail-on-error: 'false'
      - name: Show Output URL
        if: always()
        run: |
         echo "Output URL: ${{ steps.show_broker_results.outputs.url }}"
         scan_results_url="https://github.com/${GITHUB_REPOSITORY}/runs/${GITHUB_RUN_ID}"
         echo "::set-output name=scan_results_url::${scan_results_url}"
        
  show_summary:
    runs-on: ubuntu-latest
    name: Show Summary
    needs: scan_broker
    steps:
      - name: Use the value
        id: step_two
        run: |
          echo "## Scan Results for Broker Portal"
          echo "View scan results in HTML format: ${{ needs.scan_main.outputs.scan_results_url }}"
