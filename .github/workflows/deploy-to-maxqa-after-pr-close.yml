name: 'Push to develop branch - Deploy to MaxQA'
on:
  merge_group:
    paths:
      - 'src/**'

jobs:
  deploy-to-maxqa:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      SF_CLI_VERSION: ${{ vars.SF_CLI_VERSION }}
      # Sets the deployment destination from sfdx-project.json
      SF_APPLY_REPLACEMENTS_ON_CONVERT: ${{ vars.SF_APPLY_REPLACEMENTS_ON_CONVERT }}
      API_MORTGAGE_ONBOARDING_PASSTHRU: 'PRE'
      # Sets the allowed modifications to be controlled by DevOps team members
      ALLOWED_DEV_MODIFICATIONS: ${{ vars.ALLOWED_DEV_MODIFICATIONS }}
      DEVOPS_TEAM: ${{ vars.DEVOPS_TEAM }}
    outputs:
      should_notify: ${{ steps.check.outputs.should_notify }}
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Salesforce CLI
        run: npm install @salesforce/cli@${SF_CLI_VERSION} --global

      - name: Install JS dependencies
        run: npm ci

      - name: Get Changed Packages
        id: detect_changes
        run: |
          chmod +x ./devops-scripts/findChangedModules.sh
          ./devops-scripts/findChangedModules.sh HEAD^   #compare changes vs previous commit in develop branch

      # - name: Install SFDX Git Delta Plugin
      #   run: echo y | sf plugins:install sfdx-git-delta

      # - name: 'Create delta packages for new, modified or deleted metadata'
      #   id: delta_package
      #   run: |  
      #     git config --global --add safe.directory /__w/mortgagesfdc-homes-crm/mortgagesfdc-homes-crm
      #     sf sgd:source:delta --to "HEAD" --from "HEAD~1" --output ./src --source src/

      - name: Authenticate
        id: auth
        env:
          SFDXAUTHURL: ${{secrets.SFDX_AUTH_URL_MAX_QA}}  #TODO Use the real environment variables from github
        run: |
          chmod +x ./devops-scripts/authenticate.sh
          ./devops-scripts/authenticate.sh "--set-default --alias MaxQA"

      - name: Deploy Changes To MaxQA
        id: deploy_changes
        run: |
          chmod +x ./devops-scripts/includeChangedBREMetadata.sh 
          ./devops-scripts/includeChangedBREMetadata.sh
          chmod +x ./devops-scripts/runDeployments.sh
          ./devops-scripts/runDeployments.sh ${{steps.detect_changes.outputs.changed_modules}}

      - name: Create CalculationMatrixRow(s)
        if: ${{ steps.deploy_changes.outputs.decision_matrix_files != '' }}
        run: |
          chmod +x ./devops-scripts/createDecisionMatrixDefinitionRows.sh 
          ./devops-scripts/createDecisionMatrixDefinitionRows.sh ${{ steps.deploy_changes.outputs.decision_matrix_files }}         

      - name: Check coverage for flows
        id: flow_coverage
        env:
          REQUIRED_FLOW_COVERAGE: ${{ vars.REQUIRED_FLOW_COVERAGE }}
        run: |
          npm run check-flow-coverage -- --required-coverage $REQUIRED_FLOW_COVERAGE --target-org MaxQA

      - name: Cancel Job
        id: cancel
        if: ${{ cancelled() }}
        run: |
          chmod +x ./devops-scripts/cancelJob.sh
          ./devops-scripts/cancelJob.sh  ${{steps.deploy_changes.outputs.deployment_id}}

      - name: Check failure
        id: check
        if: failure() && (steps.delta_package.outcome == 'failure' || steps.auth.outcome == 'failure' || steps.flow_coverage.outcome == 'failure' || steps.cancel.outcome == 'failure' || steps.detect_changes.outcome == 'failure')
        run: echo "should_notify=true" >> $GITHUB_OUTPUT

  notify-kafka:
    needs: deploy-to-maxqa
    if: always()
    uses: ./.github/workflows/notify-kafka.yml
    with:
      deploy_environment: 'MaxQA'
      workflow_status: ${{ needs.deploy-to-maxqa.result }}

  notify-teams:
    runs-on: ubuntu-latest
    needs: deploy-to-maxqa
    if: always()
    steps:
      - uses: actions/checkout@v2

      - name: Send Teams notification
        if: ${{ needs.deploy-to-maxqa.outputs.should_notify == 'true' }}
        run: |
          chmod +x ./devops-scripts/runTeamsNotification.sh
          ./devops-scripts/runTeamsNotification.sh
        env:
          TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}
          GITHUB_REF: ${{ github.ref }}
          GITHUB_URL: ${{ github.server_url }}
          GITHUB_REPO: ${{ github.repository }}
          GITHUB_RUN: ${{ github.run_id }}

  get-changed-modules:
    outputs:
      changed_modules: ${{ steps.detect_changes.outputs.changed_modules }}
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Changed Packages
        id: detect_changes
        run: |
          chmod +x ./devops-scripts/findChangedModules.sh
          ./devops-scripts/findChangedModules.sh

  deploy-changes:
    name: 'Deployment to MaxQAa'
    needs:
      - get-changed-modules
    uses: ./.github/workflows/deploy-manual.yml
    with:
      environment: 'MaxQaa'
      modules_to_deploy: ${{ needs.get-changed-modules.outputs.changed_modules }}
      base_ref: 'HEAD~1'
    secrets: inherit
