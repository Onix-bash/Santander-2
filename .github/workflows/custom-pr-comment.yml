name: Custom Scanner PMD

on:
  pull_request:
    types: [opened, reopened, synchronize, edited]
  workflow_dispatch:

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Add comment to PR files
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const repoOwner = context.repo.owner;
            const repoName = context.repo.repo;

            try {
              // Get list of files changed in the PR
              const { data: files } = await github.rest.pulls.listFiles({
                owner: repoOwner,
                repo: repoName,
                pull_number: prNumber
              });

              // Iterate through files and add a comment
              for (const file of files) {
                const path = file.filename;
                const patch = file.patch;

                // Find the first added line in the patch
                const addedLineInfo = patch.split('\n').map((line, index) => ({ line, index }))
                  .find(lineObj => lineObj.line.startsWith('+') && !lineObj.line.startsWith('+++'));

                if (addedLineInfo) {
                  const position = addedLineInfo.index;
                  const diffHunk = patch.split('\n').slice(0, position + 1).join('\n');

                  const message = `
                    ### Code Review Comment
                    - **File:** \`${path}\`
                    - **Line:** ${position}

                    **Comment:**
                    My commit
                  `;

                  await github.rest.pulls.createReviewComment({
                    owner: repoOwner,
                    repo: repoName,
                    pull_number: prNumber,
                    body: message,
                    commit_id: context.payload.pull_request.head.sha,
                    path: path,
                    position: position,
                    side: 'RIGHT',
                    start_side: 'RIGHT',
                    diff_hunk: diffHunk
                  });
                } else {
                  console.log(`No added lines found in ${path}`);
                }
              }
            } catch (error) {
              console.log(`Error: ${error.message}`);
            }