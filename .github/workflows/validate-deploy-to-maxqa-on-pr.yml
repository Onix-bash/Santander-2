# Changelog will be written to changelog branch

name: 'PR Open/Update Triggered - Validate Deploy to MaxQA'

on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - 'src/**'

jobs:
  validate-changes:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container:
      image: salesforce/cli:latest-full
    env:
      SKIP_ORG_INTERACTION: ${{ vars.SKIP_ORG_INTERACTION }}
      # Sets the deployment destination from sfdx-project.json
      SF_APPLY_REPLACEMENTS_ON_CONVERT: ${{ vars.SF_APPLY_REPLACEMENTS_ON_CONVERT }}
      DEPLOY_DESTINATION: ${{ vars.DEPLOY_DESTINATION }}
      # Sets the allowed modifications to be controlled by DevOps team members
      ALLOWED_DEV_MODIFICATIONS: ${{ vars.ALLOWED_DEV_MODIFICATIONS }}
      DEVOPS_TEAM: ${{ vars.DEVOPS_TEAM }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SEVERITY: ${{ vars.SEVERITY }}
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

#      - name: Validate src-temp folder changes
#        run: |
#          chmod +x ./devops-scripts/tempFolder.sh
#          ./devops-scripts/tempFolder.sh

      - name: Validate SFDX health
        run: sf -v

      - name: Get Changed Packages
        id: detect_changes
        run: |
          chmod +x ./devops-scripts/findChangedModules.sh
          ./devops-scripts/findChangedModules.sh

      - name: Install Flow Analyser
        run: echo Y | sf plugins install lightning-flow-scanner

#      - name: Run Flow Analyser
#        run: |
#          chmod +x ./devops-scripts/runFlowScanner.sh
#          ./devops-scripts/runFlowScanner.sh ${{steps.detect_changes.outputs.changed_modules}}

      - name: Install SFDX Code Analyser
        run: sf plugins install @salesforce/sfdx-scanner@4.2.0

      - name: Install SFDX Git Delta Plugin
        run: echo y | sf plugins:install sfdx-git-delta

      - name: 'Create delta packages for new, modified or deleted metadata'
        run: |  
          git config --global --add safe.directory '*'
          sf sgd:source:delta --to "HEAD" --from "HEAD^" --output ./src --source src/

      - name: Run Code Analyser against changed modules
        run: | 
          chmod +x ./devops-scripts/runScanner.sh
          ./devops-scripts/runScanner.sh ${{steps.detect_changes.outputs.changed_modules}}

      - name: Show Scan Results on PR 
        uses: actions/github-script@v7
        if: always()
        with:
            script: |
              const script = require('./devops-scripts/showScanPR.js')
              await script({ github, context });

#      - name: Authenticate
#        env:
#          SFDXAUTHURL: ${{secrets.SFDX_AUTH_URL_MAX_QA}}  #TODO Use the real environment variables from github
#        run:  |
#          chmod +x ./devops-scripts/authenticate.sh
#          ./devops-scripts/authenticate.sh --set-default

      - name: Generate Manifest
        id: generate_manifest
        run: |
          chmod +x ./devops-scripts/generateManifest.sh
          ./devops-scripts/generateManifest.sh ${{steps.detect_changes.outputs.changed_modules}}

      - name: Add Changed Decision Center Metadata to Manifest
        id: set_manifest
        run: |
          npm ci
          node ./devops-scripts/addChangedDecisionCenterMetadata.js 

      - name: Validate deployment to MaxQA
        id: validate_changes
        if: env.SKIP_ORG_INTERACTION == 'false'
        run: |
          chmod +x ./devops-scripts/runValidations.sh
          ./devops-scripts/runValidations.sh ${{steps.detect_changes.outputs.changed_modules}}

      - name: Cancel Job
        if: ${{ cancelled() }}
        run: |
          chmod +x ./devops-scripts/cancelJob.sh
          ./devops-scripts/cancelJob.sh  ${{steps.validate_changes.outputs.deployment_id}}