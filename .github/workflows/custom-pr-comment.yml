name: Custom Scanner PMD

on:
  pull_request:
    types: [opened, reopened, synchronize, edited]
  workflow_dispatch:

jobs:
  analyze:
    runs-on: ubuntu-latest
    name: Scan Results
    container:
      image: salesforce/cli:latest-full
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install SFDX Code Analyser
        env:
          PULL_REQUEST_HEAD_REF: "${{ github.event.pull_request.head.ref }}"
          PULL_REQUEST_BASE_REF: "${{ github.event.pull_request.base.ref }}"
          src_diff_files: ${{ env.src_files }}
        run: |
          sf plugins install @salesforce/sfdx-scanner@4.2.0
          chmod +x ./devops-scripts/scan-pull-request.sh
          ./devops-scripts/scan-pull-request.sh

      - name: Add comment to PR files
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const prNumber = context.payload.pull_request.number;
            const repoOwner = context.repo.owner;
            const repoName = context.repo.repo;

            try {
              // Read the JSON report
              const report = JSON.parse(fs.readFileSync('output/report.json', 'utf-8'));
              console.log("report: ",report[0].violations);
              for (const file of report) {
              const path = file.filename;
               console.log("file: ",file);
              const violations = file.violations; // Access the violations array
              
              for (const violation of violations) {
            console.log("violation: ",violation);
              const position = violation.line;
              const diffHunk = violation.endLine;
            const message = `**${violation.ruleName}**: ${violation.message.trim()}\n**Category**: ${violation.category}\n**Severity**: ${violation.severity}`;
              
              await github.rest.pulls.createReviewComment({
            owner: repoOwner,
            repo: repoName,
            pull_number: prNumber,
            body: message,
            commit_id: context.payload.pull_request.head.sha,
            path: path,
            position: position,
            side: 'RIGHT',
            start_side: 'RIGHT',
            diff_hunk: diffHunk
            });
            }
            }
            
            } catch (error) {
            console.log(`Error: ${error.message}`);
            }
