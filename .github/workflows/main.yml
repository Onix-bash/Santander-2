name: CI Reporting

on:
  push:
    branches: 'main'
env:
 BROKER_PORTAL : broker-portal
 APPLICATION_LOGGING: application-logging

jobs:
  scan_main:
    runs-on: ubuntu-latest
    name: Run Scanner
    container:
      image: salesforce/cli:latest-full
    outputs:
      output_path: ${{steps.scanner.outputs.output_directory}}
    steps:
      - uses: actions/checkout@v4

      - name: Install Scanner
        run: sf plugins install @salesforce/sfdx-scanner@latest-beta

      - name: Run Scanner
        id: scanner
        run: |
          chmod +x ./bash.sh
          ./bash.sh

      - uses: actions/upload-artifact@v4
        with:
          name: Scan Results
          path: ${{steps.scanner.outputs.output_directory}}/*/*.xml

  scan_broker_portal:
    runs-on: ubuntu-latest
    name: Broker Portal
    container:
      image: salesforce/cli:latest-full
    outputs:
      output_path: ${{steps.scanner.outputs.output_directory}}
    steps:
      - uses: actions/checkout@v4

      - name: Install Scanner
        run: sf plugins install @salesforce/sfdx-scanner@latest-beta

      - name: Run Scanner
        id: scanner
        run: |
          chmod +x ./bash.sh
          ./bash.sh
      - name: Show Results
        uses: phoenix-actions/test-reporting@v8
        if: always()
        with:
          name: Broker Portal Scan
          path: ${{steps.scanner.outputs.output_directory}}/$BROKER_PORTAL/*.xml
          reporter: java-junit
          fail-on-error: 'false'

  scan_application_logging:
    runs-on: ubuntu-latest
    name: Application Logging
    container:
      image: salesforce/cli:latest-full
    outputs:
      output_path: ${{steps.scanner.outputs.output_directory}}
    steps:
      - uses: actions/checkout@v4

      - name: Install Scanner
        run: sf plugins install @salesforce/sfdx-scanner@latest-beta

      - name: Run Scanner
        id: scanner
        run: |
          chmod +x ./bash.sh
          ./bash.sh
      - name: Show Results
        uses: phoenix-actions/test-reporting@v8
        if: always()
        with:
          name: Application Logging Scan
          path: ${{steps.scanner.outputs.output_directory}}/$APPLICATION_LOGGING/*.xml
          reporter: java-junit
          fail-on-error: 'false'
