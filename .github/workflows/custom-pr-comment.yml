name: Custom Scanner PMD

on:
  pull_request:
    types: [opened, reopened, synchronize, edited]
  workflow_dispatch:

jobs:
  analyze:
    runs-on: ubuntu-latest
    name: Scan Results
    container:
      image: salesforce/cli:latest-full
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install SFDX Code Analyser
        env:
          PULL_REQUEST_HEAD_REF: "${{ github.event.pull_request.head.ref }}"
          PULL_REQUEST_BASE_REF: "${{ github.event.pull_request.base.ref }}"
          src_diff_files: ${{ env.src_files }}
        run: |
          sf plugins install @salesforce/sfdx-scanner@4.2.0
          chmod +x ./devops-scripts/scan-pull-request.sh
          ./devops-scripts/scan-pull-request.sh

      - name: Add comment to PR files
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const prNumber = context.payload.pull_request.number;
            const repoOwner = context.repo.owner;
            const repoName = context.repo.repo;

            // Read the JSON report
            const report = JSON.parse(fs.readFileSync('output/report.json', 'utf-8'));

            // Add comments to the PR based on the report
            for (const result of report) {
              const fileName = result.fileName.replace('/__w/Santander-2/Santander-2/', '');
              for (const violation of result.violations) {
                const message = `<table role="table"><thead><tr><th>Attribute</th><th>Value</th></tr></thead><tbody><tr><td>Engine</td><td>violation.engine</td></tr>
                    <tr>
                    <td>violation.category</td>
                    <td>Code Style</td>
                    </tr>
                    <tr>
                    <td>Rule</td>
                    <td>violation.ruleName</td>
                    </tr>
                    <tr>
                    <td>Severity</td>
                    <td>violation.severity</td>
                    </tr>
                    <tr>
                    <td>Type</td>
                    <td>Error</td>
                    </tr>
                    <tr>
                    <td>Message</td>
                    <td><a href="violation.url" rel="nofollow">violation.message</a></td>
                    </tr>
                    <tr>
                    <td>File</td>
                    <td><a href="violation.fileName">violation.fileName</a></td>
                    </tr>
                    </tbody>
                    </table>`;`;
                const line = violation.line;

                // Add comment to the PR
                await github.rest.pulls.createReviewComment({
                  owner: repoOwner,
                  repo: repoName,
                  pull_number: prNumber,
                  body: message,
                  commit_id: context.payload.pull_request.head.sha,
                  path: fileName,
                  line: line,
                  side: 'RIGHT',
                });
              }
            }

