name: Custom Scanner PMD

on:
  pull_request:
      types: [opened, reopened, synchronize, edited]
  workflow_dispatch:

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Add comment to PR files
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const repoOwner = context.repo.owner;
            const repoName = context.repo.repo;

            try {
              // Get list of files changed in the PR
              const { data: files } = await github.rest.pulls.listFiles({
                      owner: repoOwner,
                      repo: repoName,
                      pull_number: prNumber
                    });

                    // Iterate through files and add a comment
                    for (const file of files) {
                      const path = file.filename;
                      const patch = file.patch;
                      const hunks = parser.parsePatch(patch);
                      for (const hunk of hunks) {
                        const lineNumber = hunk.newStart + hunk.newLines.findIndex(line => line.startsWith('+'));
                        const message = 'My commit';
                        if (lineNumber > 0 && lineNumber >= hunk.newStart && lineNumber < hunk.newStart + hunk.newLines.length) {
                          await github.rest.pulls.createReviewComment({
                            owner: repoOwner,
                            repo: repoName,
                            pull_number: prNumber,
                            body: message,
                            commit_id: context.payload.pull_request.head.sha,
                            path: path,
                            start_line: hunk.newStart,
                            start_side: 'RIGHT',
                            line: lineNumber,
                            side: 'RIGHT',
                            diff_hunk: `@@ -${hunk.oldStart},${hunk.oldLines.length} +${hunk.newStart},${hunk.newLines.length} @@`,
                          });
                        } else {
                          console.log(`No added lines found in ${path}`);
                        }
                      }
                    }
                  } catch (error) {
                    console.log(`Error: ${error.message}`);
                  }